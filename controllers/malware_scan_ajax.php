<?php
class Mo_scan_malware_wpns
{
	function __construct(){
		add_action( 'admin_init'  , array( $this, 'mo_wpns_malware_scanner_functions' ) );
	}

	public function mo_wpns_malware_scanner_functions(){
		add_action('wp_ajax_mo_wpns_malware_redirect', array( $this, 'mo_wpns_malware_redirect' ));
	}

	public function mo_wpns_malware_redirect(){
		switch($_POST['call_type'])
		{
			case "submit_malware_settings_form":
				$this->mo_wpns_save_malware_config_form($_POST);
				break;
			case "malware_scan_initiate":
				$this->mo_wpns_start_malware_scan($_POST);
				break;
			case "malware_scan_status":
				$this->mo_wpns_get_status();
				break;
		}
	}

	public function mo_wpns_save_malware_config_form($POSTED){
		$nonce = $POSTED['nonce'];
	   		if ( ! wp_verify_nonce( $nonce, 'wpns-scan-settings' ) ){
	   			wp_send_json('ERROR');
	   			return;
	   		}
		if(! isset($POSTED['scan_plugin']) && ! isset($POSTED['scan_themes']) && ! isset($POSTED['scan_core'])){
			wp_send_json('folder_error');
		}elseif (! isset($POSTED['vulnerable_check']) && ! isset($POSTED['sql_check']) && ! isset($POSTED['rfi_check']) && ! isset($POSTED['ext_link']) && ! isset($POSTED['repo_check'])) {
			wp_send_json('level_error');
		}
		else{
			isset($POSTED['scan_plugin']) ? update_option('mo_wpns_scan_plugins',sanitize_text_field($POSTED['scan_plugin'])) : update_option('mo_wpns_scan_plugins',0);
			isset($POSTED['scan_themes']) ? update_option('mo_wpns_scan_themes',sanitize_text_field($POSTED['scan_themes'])) : update_option('mo_wpns_scan_themes',0);
			isset($POSTED['scan_core']) ? update_option('mo_wpns_scan_wp_files',sanitize_text_field($POSTED['scan_core'])) : update_option('mo_wpns_scan_wp_files',0);
			update_option('mo_wpns_scan_files_extensions',sanitize_text_field($POSTED['file_type']));
			isset($POSTED['vulnerable_check']) ? update_option('mo_wpns_check_vulnerable_code',sanitize_text_field($POSTED['vulnerable_check'])) : update_option('mo_wpns_check_vulnerable_code',0);
			isset($POSTED['sql_check']) ? update_option('mo_wpns_check_sql_injection',sanitize_text_field($POSTED['sql_check'])) : update_option('mo_wpns_check_sql_injection',0);
			isset($POSTED['ext_link']) ? update_option('mo_wpns_check_external_link',sanitize_text_field($POSTED['ext_link'])) : update_option('mo_wpns_check_external_link',0);
			isset($POSTED['repo_check']) ? update_option('mo_wpns_scan_files_with_repo',sanitize_text_field($POSTED['repo_check'])) : update_option('mo_wpns_scan_files_with_repo',0);
			
			$folders_to_skip= $POSTED['skip_path'];
			if(!empty($folders_to_skip)){
				$folders_to_skip_array=explode(";",$folders_to_skip);
				for($i=0; $i< count($folders_to_skip_array); $i++){
					$str.= $folders_to_skip_array[$i];
					if($i!= count($folders_to_skip_array)-1){
						$str.=";";
					}
				}
				update_option( 'mo_wpns_skip_folders', $str);
			}
			
			wp_send_json('save_success');
		}
	}

	public function mo_wpns_start_malware_scan($POSTED){
        global $mo_dirName;
		include_once $mo_dirName. DIRECTORY_SEPARATOR.'handler'.DIRECTORY_SEPARATOR.'malware_scanner.php';
		$mo_Mo_wpns_Scan_Handler = new mo_Mo_wpns_Scan_Handler();
		if(isset($POSTED['scan']) && $POSTED['scan']=='scan_start'){
			$scan_configuration = array();
			switch($POSTED['scantype'])
			{
				case "quick_scan":
					$nonce = $POSTED['nonce'];
			   		if ( ! wp_verify_nonce( $nonce, 'wpns-quick-scan' ) ){
			   			wp_send_json('ERROR');
			   			return;
			   		}
					$scan_configuration = array('plugin_scan' => 1 ,
												'theme_scan'  => 1,
												'core_scan'	  => 1,
												'file_extension' => "php",
												'check_vulnerable' => 1,
												'check_sql' => 1,
												'ext_link_check' => 0,
												'check_repo' => 0,
												'path_skip' => "",
												'type_scan' => "Quick Scan"
												);
					update_option('mo_wpns_scan_mode','quick_scan');
					$mo_Mo_wpns_Scan_Handler->mo2f_scan_all_files($scan_configuration);
					break;
				case "standard_scan":
					$nonce = $POSTED['nonce'];
			   		if ( ! wp_verify_nonce( $nonce, 'wpns-standard-scan' ) ){
			   			wp_send_json('ERROR');
			   			return;
			   		}
					$scan_configuration = array('plugin_scan' => 1 ,
												'theme_scan'  => 1,
												'core_scan'	  => 1,
												'file_extension' => "php",
												'check_vulnerable' => 1,
												'check_sql' => 1,
												'ext_link_check' => 1,
												'check_repo' => 1,
												'path_skip' => "",
												'type_scan' => "Standard Scan"
												);
					update_option('mo_wpns_scan_mode','standard_scan');
					$mo_Mo_wpns_Scan_Handler->mo2f_scan_all_files($scan_configuration);
					break;
				case "custom_scan":
					$nonce = $POSTED['nonce'];
			   		if ( ! wp_verify_nonce( $nonce, 'wpns-custom-scan' ) ){
			   			wp_send_json('ERROR');
			   			return;
			   		}
					$scan_configuration = array('plugin_scan' => get_option('mo_wpns_scan_plugins') ,
												'theme_scan'  => get_option('mo_wpns_scan_themes'),
												'core_scan'	  => get_option('mo_wpns_scan_wp_files'),
												'file_extension' => get_option('mo_wpns_scan_files_extensions'),
												'check_vulnerable' => get_option('mo_wpns_check_vulnerable_code') ,
												'check_sql' => get_option('mo_wpns_check_sql_injection'),
												'ext_link_check' => get_option('mo_wpns_check_external_link'),
												'check_repo' => get_option('mo_wpns_scan_files_with_repo'),
												'path_skip' => get_option('mo_wpns_skip_folders'),
												'type_scan' => "Custom Scan"
												);
					update_option('mo_wpns_scan_mode','custom_scan');
					$mo_Mo_wpns_Scan_Handler->mo2f_scan_all_files($scan_configuration);
					break;
			}
		}
	}

	public function mo_wpns_get_status(){
		$status= get_option('mo_wpns_malware_scan_in_progress');
		$files_scanned = get_option('mo_wpns_files_scanned');
		$infected_files= get_option('mo_wpns_infected_files');
		$result=array("status"=>$status, "scanned"=>$files_scanned, "infected"=>$infected_files); 
		wp_send_json($result);
	}
}
new Mo_scan_malware_wpns();
?>